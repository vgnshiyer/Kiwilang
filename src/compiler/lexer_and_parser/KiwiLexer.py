# Generated from Kiwi.g4 by ANTLR 4.9.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2.")
        buf.write("\u0120\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\3\2")
        buf.write("\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\5\3")
        buf.write("\5\3\5\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\n")
        buf.write("\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16")
        buf.write("\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\20")
        buf.write("\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23")
        buf.write("\3\23\3\23\3\23\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25")
        buf.write("\3\26\3\26\3\26\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31")
        buf.write("\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\7\32\u00b9\n")
        buf.write("\32\f\32\16\32\u00bc\13\32\3\32\3\32\3\33\3\33\7\33\u00c2")
        buf.write("\n\33\f\33\16\33\u00c5\13\33\3\33\5\33\u00c8\n\33\3\34")
        buf.write("\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\5\34\u00d3\n")
        buf.write("\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3!\3!\3")
        buf.write("\"\3\"\3\"\3#\3#\3#\3#\3$\3$\3$\3%\3%\3%\3&\3&\3\'\3\'")
        buf.write("\3\'\3(\3(\3)\3)\3)\3*\3*\3*\3+\3+\7+\u00fd\n+\f+\16+")
        buf.write("\u0100\13+\3,\6,\u0103\n,\r,\16,\u0104\3,\3,\3-\3-\3-")
        buf.write("\3-\7-\u010d\n-\f-\16-\u0110\13-\3-\3-\3-\3-\7-\u0116")
        buf.write("\n-\f-\16-\u0119\13-\3-\3-\5-\u011d\n-\3-\3-\3\u0117\2")
        buf.write(".\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31")
        buf.write("\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31")
        buf.write("\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O")
        buf.write(")Q*S+U,W-Y.\3\2\n\3\2$$\4\2\f\f\17\17\4\2$$^^\3\2\63;")
        buf.write("\3\2\62;\5\2C\\aac|\6\2\62;C\\aac|\5\2\13\f\17\17\"\"")
        buf.write("\2\u012b\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2")
        buf.write("\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2")
        buf.write("\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2")
        buf.write("\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3")
        buf.write("\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2")
        buf.write("-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3")
        buf.write("\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2")
        buf.write("?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2")
        buf.write("\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2")
        buf.write("\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\3[\3\2")
        buf.write("\2\2\5_\3\2\2\2\7d\3\2\2\2\th\3\2\2\2\13k\3\2\2\2\rn\3")
        buf.write("\2\2\2\17p\3\2\2\2\21r\3\2\2\2\23t\3\2\2\2\25w\3\2\2\2")
        buf.write("\27y\3\2\2\2\31{\3\2\2\2\33\u0083\3\2\2\2\35\u0088\3\2")
        buf.write("\2\2\37\u008e\3\2\2\2!\u0092\3\2\2\2#\u0094\3\2\2\2%\u0097")
        buf.write("\3\2\2\2\'\u009d\3\2\2\2)\u009f\3\2\2\2+\u00a5\3\2\2\2")
        buf.write("-\u00a8\3\2\2\2/\u00aa\3\2\2\2\61\u00ad\3\2\2\2\63\u00b2")
        buf.write("\3\2\2\2\65\u00c7\3\2\2\2\67\u00d2\3\2\2\29\u00d4\3\2")
        buf.write("\2\2;\u00d6\3\2\2\2=\u00d8\3\2\2\2?\u00da\3\2\2\2A\u00dc")
        buf.write("\3\2\2\2C\u00e0\3\2\2\2E\u00e3\3\2\2\2G\u00e7\3\2\2\2")
        buf.write("I\u00ea\3\2\2\2K\u00ed\3\2\2\2M\u00ef\3\2\2\2O\u00f2\3")
        buf.write("\2\2\2Q\u00f4\3\2\2\2S\u00f7\3\2\2\2U\u00fa\3\2\2\2W\u0102")
        buf.write("\3\2\2\2Y\u011c\3\2\2\2[\\\7k\2\2\\]\7p\2\2]^\7v\2\2^")
        buf.write("\4\3\2\2\2_`\7d\2\2`a\7q\2\2ab\7q\2\2bc\7n\2\2c\6\3\2")
        buf.write("\2\2de\7u\2\2ef\7v\2\2fg\7t\2\2g\b\3\2\2\2hi\7-\2\2ij")
        buf.write("\7-\2\2j\n\3\2\2\2kl\7/\2\2lm\7/\2\2m\f\3\2\2\2no\7?\2")
        buf.write("\2o\16\3\2\2\2pq\7*\2\2q\20\3\2\2\2rs\7+\2\2s\22\3\2\2")
        buf.write("\2tu\7k\2\2uv\7h\2\2v\24\3\2\2\2wx\7}\2\2x\26\3\2\2\2")
        buf.write("yz\7\177\2\2z\30\3\2\2\2{|\7g\2\2|}\7n\2\2}~\7u\2\2~\177")
        buf.write("\7g\2\2\177\u0080\7\"\2\2\u0080\u0081\7k\2\2\u0081\u0082")
        buf.write("\7h\2\2\u0082\32\3\2\2\2\u0083\u0084\7g\2\2\u0084\u0085")
        buf.write("\7n\2\2\u0085\u0086\7u\2\2\u0086\u0087\7g\2\2\u0087\34")
        buf.write("\3\2\2\2\u0088\u0089\7y\2\2\u0089\u008a\7j\2\2\u008a\u008b")
        buf.write("\7k\2\2\u008b\u008c\7n\2\2\u008c\u008d\7g\2\2\u008d\36")
        buf.write("\3\2\2\2\u008e\u008f\7h\2\2\u008f\u0090\7q\2\2\u0090\u0091")
        buf.write("\7t\2\2\u0091 \3\2\2\2\u0092\u0093\7=\2\2\u0093\"\3\2")
        buf.write("\2\2\u0094\u0095\7k\2\2\u0095\u0096\7p\2\2\u0096$\3\2")
        buf.write("\2\2\u0097\u0098\7t\2\2\u0098\u0099\7c\2\2\u0099\u009a")
        buf.write("\7p\2\2\u009a\u009b\7i\2\2\u009b\u009c\7g\2\2\u009c&\3")
        buf.write("\2\2\2\u009d\u009e\7.\2\2\u009e(\3\2\2\2\u009f\u00a0\7")
        buf.write("r\2\2\u00a0\u00a1\7t\2\2\u00a1\u00a2\7k\2\2\u00a2\u00a3")
        buf.write("\7p\2\2\u00a3\u00a4\7v\2\2\u00a4*\3\2\2\2\u00a5\u00a6")
        buf.write("\7h\2\2\u00a6\u00a7\7p\2\2\u00a7,\3\2\2\2\u00a8\u00a9")
        buf.write("\7<\2\2\u00a9.\3\2\2\2\u00aa\u00ab\7*\2\2\u00ab\u00ac")
        buf.write("\7+\2\2\u00ac\60\3\2\2\2\u00ad\u00ae\7i\2\2\u00ae\u00af")
        buf.write("\7k\2\2\u00af\u00b0\7x\2\2\u00b0\u00b1\7g\2\2\u00b1\62")
        buf.write("\3\2\2\2\u00b2\u00ba\7$\2\2\u00b3\u00b9\n\2\2\2\u00b4")
        buf.write("\u00b9\t\3\2\2\u00b5\u00b6\7^\2\2\u00b6\u00b9\13\2\2\2")
        buf.write("\u00b7\u00b9\n\4\2\2\u00b8\u00b3\3\2\2\2\u00b8\u00b4\3")
        buf.write("\2\2\2\u00b8\u00b5\3\2\2\2\u00b8\u00b7\3\2\2\2\u00b9\u00bc")
        buf.write("\3\2\2\2\u00ba\u00b8\3\2\2\2\u00ba\u00bb\3\2\2\2\u00bb")
        buf.write("\u00bd\3\2\2\2\u00bc\u00ba\3\2\2\2\u00bd\u00be\7$\2\2")
        buf.write("\u00be\64\3\2\2\2\u00bf\u00c3\t\5\2\2\u00c0\u00c2\t\6")
        buf.write("\2\2\u00c1\u00c0\3\2\2\2\u00c2\u00c5\3\2\2\2\u00c3\u00c1")
        buf.write("\3\2\2\2\u00c3\u00c4\3\2\2\2\u00c4\u00c8\3\2\2\2\u00c5")
        buf.write("\u00c3\3\2\2\2\u00c6\u00c8\7\62\2\2\u00c7\u00bf\3\2\2")
        buf.write("\2\u00c7\u00c6\3\2\2\2\u00c8\66\3\2\2\2\u00c9\u00ca\7")
        buf.write("v\2\2\u00ca\u00cb\7t\2\2\u00cb\u00cc\7w\2\2\u00cc\u00d3")
        buf.write("\7g\2\2\u00cd\u00ce\7h\2\2\u00ce\u00cf\7c\2\2\u00cf\u00d0")
        buf.write("\7n\2\2\u00d0\u00d1\7u\2\2\u00d1\u00d3\7g\2\2\u00d2\u00c9")
        buf.write("\3\2\2\2\u00d2\u00cd\3\2\2\2\u00d38\3\2\2\2\u00d4\u00d5")
        buf.write("\7-\2\2\u00d5:\3\2\2\2\u00d6\u00d7\7/\2\2\u00d7<\3\2\2")
        buf.write("\2\u00d8\u00d9\7,\2\2\u00d9>\3\2\2\2\u00da\u00db\7\61")
        buf.write("\2\2\u00db@\3\2\2\2\u00dc\u00dd\7c\2\2\u00dd\u00de\7p")
        buf.write("\2\2\u00de\u00df\7f\2\2\u00dfB\3\2\2\2\u00e0\u00e1\7q")
        buf.write("\2\2\u00e1\u00e2\7t\2\2\u00e2D\3\2\2\2\u00e3\u00e4\7p")
        buf.write("\2\2\u00e4\u00e5\7q\2\2\u00e5\u00e6\7v\2\2\u00e6F\3\2")
        buf.write("\2\2\u00e7\u00e8\7?\2\2\u00e8\u00e9\7?\2\2\u00e9H\3\2")
        buf.write("\2\2\u00ea\u00eb\7#\2\2\u00eb\u00ec\7?\2\2\u00ecJ\3\2")
        buf.write("\2\2\u00ed\u00ee\7@\2\2\u00eeL\3\2\2\2\u00ef\u00f0\7@")
        buf.write("\2\2\u00f0\u00f1\7?\2\2\u00f1N\3\2\2\2\u00f2\u00f3\7>")
        buf.write("\2\2\u00f3P\3\2\2\2\u00f4\u00f5\7>\2\2\u00f5\u00f6\7?")
        buf.write("\2\2\u00f6R\3\2\2\2\u00f7\u00f8\7<\2\2\u00f8\u00f9\7?")
        buf.write("\2\2\u00f9T\3\2\2\2\u00fa\u00fe\t\7\2\2\u00fb\u00fd\t")
        buf.write("\b\2\2\u00fc\u00fb\3\2\2\2\u00fd\u0100\3\2\2\2\u00fe\u00fc")
        buf.write("\3\2\2\2\u00fe\u00ff\3\2\2\2\u00ffV\3\2\2\2\u0100\u00fe")
        buf.write("\3\2\2\2\u0101\u0103\t\t\2\2\u0102\u0101\3\2\2\2\u0103")
        buf.write("\u0104\3\2\2\2\u0104\u0102\3\2\2\2\u0104\u0105\3\2\2\2")
        buf.write("\u0105\u0106\3\2\2\2\u0106\u0107\b,\2\2\u0107X\3\2\2\2")
        buf.write("\u0108\u0109\7\61\2\2\u0109\u010a\7\61\2\2\u010a\u010e")
        buf.write("\3\2\2\2\u010b\u010d\n\3\2\2\u010c\u010b\3\2\2\2\u010d")
        buf.write("\u0110\3\2\2\2\u010e\u010c\3\2\2\2\u010e\u010f\3\2\2\2")
        buf.write("\u010f\u011d\3\2\2\2\u0110\u010e\3\2\2\2\u0111\u0112\7")
        buf.write("\61\2\2\u0112\u0113\7,\2\2\u0113\u0117\3\2\2\2\u0114\u0116")
        buf.write("\13\2\2\2\u0115\u0114\3\2\2\2\u0116\u0119\3\2\2\2\u0117")
        buf.write("\u0118\3\2\2\2\u0117\u0115\3\2\2\2\u0118\u011a\3\2\2\2")
        buf.write("\u0119\u0117\3\2\2\2\u011a\u011b\7,\2\2\u011b\u011d\7")
        buf.write("\61\2\2\u011c\u0108\3\2\2\2\u011c\u0111\3\2\2\2\u011d")
        buf.write("\u011e\3\2\2\2\u011e\u011f\b-\2\2\u011fZ\3\2\2\2\r\2\u00b8")
        buf.write("\u00ba\u00c3\u00c7\u00d2\u00fe\u0104\u010e\u0117\u011c")
        buf.write("\3\b\2\2")
        return buf.getvalue()


class KiwiLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    STRING = 25
    DIGIT = 26
    BOOL = 27
    ADD = 28
    SUB = 29
    MUL = 30
    DIV = 31
    AND = 32
    OR = 33
    NOT = 34
    EQ = 35
    NEQ = 36
    GT = 37
    GTE = 38
    LT = 39
    LTE = 40
    ASSIGN = 41
    ID = 42
    WS = 43
    Comment = 44

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'int'", "'bool'", "'str'", "'++'", "'--'", "'='", "'('", "')'", 
            "'if'", "'{'", "'}'", "'else if'", "'else'", "'while'", "'for'", 
            "';'", "'in'", "'range'", "','", "'print'", "'fn'", "':'", "'()'", 
            "'give'", "'+'", "'-'", "'*'", "'/'", "'and'", "'or'", "'not'", 
            "'=='", "'!='", "'>'", "'>='", "'<'", "'<='", "':='" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "DIGIT", "BOOL", "ADD", "SUB", "MUL", "DIV", "AND", 
            "OR", "NOT", "EQ", "NEQ", "GT", "GTE", "LT", "LTE", "ASSIGN", 
            "ID", "WS", "Comment" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "STRING", "DIGIT", 
                  "BOOL", "ADD", "SUB", "MUL", "DIV", "AND", "OR", "NOT", 
                  "EQ", "NEQ", "GT", "GTE", "LT", "LTE", "ASSIGN", "ID", 
                  "WS", "Comment" ]

    grammarFileName = "Kiwi.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


