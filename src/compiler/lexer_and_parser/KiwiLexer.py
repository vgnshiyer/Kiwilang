# Generated from Kiwi.g4 by ANTLR 4.9.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2/")
        buf.write("\u0124\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3")
        buf.write("\4\3\5\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n")
        buf.write("\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r")
        buf.write("\3\r\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\21")
        buf.write("\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\23\3\23")
        buf.write("\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26")
        buf.write("\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31")
        buf.write("\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33")
        buf.write("\3\33\7\33\u00bd\n\33\f\33\16\33\u00c0\13\33\3\33\3\33")
        buf.write("\3\34\3\34\7\34\u00c6\n\34\f\34\16\34\u00c9\13\34\3\34")
        buf.write("\5\34\u00cc\n\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3")
        buf.write("\35\3\35\5\35\u00d7\n\35\3\36\3\36\3\37\3\37\3 \3 \3!")
        buf.write("\3!\3\"\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3$\3%\3%\3%\3&\3")
        buf.write("&\3&\3\'\3\'\3(\3(\3(\3)\3)\3*\3*\3*\3+\3+\3+\3,\3,\7")
        buf.write(",\u0101\n,\f,\16,\u0104\13,\3-\6-\u0107\n-\r-\16-\u0108")
        buf.write("\3-\3-\3.\3.\3.\3.\7.\u0111\n.\f.\16.\u0114\13.\3.\3.")
        buf.write("\3.\3.\7.\u011a\n.\f.\16.\u011d\13.\3.\3.\5.\u0121\n.")
        buf.write("\3.\3.\3\u011b\2/\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23")
        buf.write("\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25")
        buf.write(")\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A")
        buf.write("\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/\3\2\n\3\2$$\4\2\f\f\17\17")
        buf.write("\4\2$$^^\3\2\63;\3\2\62;\5\2C\\aac|\6\2\62;C\\aac|\5\2")
        buf.write("\13\f\17\17\"\"\2\u012f\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3")
        buf.write("\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2")
        buf.write("\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2")
        buf.write("\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2")
        buf.write("!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2")
        buf.write("\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3")
        buf.write("\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2")
        buf.write("\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2")
        buf.write("\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2")
        buf.write("\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3")
        buf.write("\2\2\2\2[\3\2\2\2\3]\3\2\2\2\5a\3\2\2\2\7f\3\2\2\2\tj")
        buf.write("\3\2\2\2\13m\3\2\2\2\rp\3\2\2\2\17r\3\2\2\2\21t\3\2\2")
        buf.write("\2\23v\3\2\2\2\25y\3\2\2\2\27{\3\2\2\2\31}\3\2\2\2\33")
        buf.write("\u0085\3\2\2\2\35\u008a\3\2\2\2\37\u008c\3\2\2\2!\u008e")
        buf.write("\3\2\2\2#\u0094\3\2\2\2%\u0098\3\2\2\2\'\u009a\3\2\2\2")
        buf.write(")\u009d\3\2\2\2+\u00a3\3\2\2\2-\u00a5\3\2\2\2/\u00ab\3")
        buf.write("\2\2\2\61\u00ae\3\2\2\2\63\u00b1\3\2\2\2\65\u00b6\3\2")
        buf.write("\2\2\67\u00cb\3\2\2\29\u00d6\3\2\2\2;\u00d8\3\2\2\2=\u00da")
        buf.write("\3\2\2\2?\u00dc\3\2\2\2A\u00de\3\2\2\2C\u00e0\3\2\2\2")
        buf.write("E\u00e4\3\2\2\2G\u00e7\3\2\2\2I\u00eb\3\2\2\2K\u00ee\3")
        buf.write("\2\2\2M\u00f1\3\2\2\2O\u00f3\3\2\2\2Q\u00f6\3\2\2\2S\u00f8")
        buf.write("\3\2\2\2U\u00fb\3\2\2\2W\u00fe\3\2\2\2Y\u0106\3\2\2\2")
        buf.write("[\u0120\3\2\2\2]^\7k\2\2^_\7p\2\2_`\7v\2\2`\4\3\2\2\2")
        buf.write("ab\7d\2\2bc\7q\2\2cd\7q\2\2de\7n\2\2e\6\3\2\2\2fg\7u\2")
        buf.write("\2gh\7v\2\2hi\7t\2\2i\b\3\2\2\2jk\7-\2\2kl\7-\2\2l\n\3")
        buf.write("\2\2\2mn\7/\2\2no\7/\2\2o\f\3\2\2\2pq\7?\2\2q\16\3\2\2")
        buf.write("\2rs\7*\2\2s\20\3\2\2\2tu\7+\2\2u\22\3\2\2\2vw\7k\2\2")
        buf.write("wx\7h\2\2x\24\3\2\2\2yz\7}\2\2z\26\3\2\2\2{|\7\177\2\2")
        buf.write("|\30\3\2\2\2}~\7g\2\2~\177\7n\2\2\177\u0080\7u\2\2\u0080")
        buf.write("\u0081\7g\2\2\u0081\u0082\7\"\2\2\u0082\u0083\7k\2\2\u0083")
        buf.write("\u0084\7h\2\2\u0084\32\3\2\2\2\u0085\u0086\7g\2\2\u0086")
        buf.write("\u0087\7n\2\2\u0087\u0088\7u\2\2\u0088\u0089\7g\2\2\u0089")
        buf.write("\34\3\2\2\2\u008a\u008b\7A\2\2\u008b\36\3\2\2\2\u008c")
        buf.write("\u008d\7<\2\2\u008d \3\2\2\2\u008e\u008f\7y\2\2\u008f")
        buf.write("\u0090\7j\2\2\u0090\u0091\7k\2\2\u0091\u0092\7n\2\2\u0092")
        buf.write("\u0093\7g\2\2\u0093\"\3\2\2\2\u0094\u0095\7h\2\2\u0095")
        buf.write("\u0096\7q\2\2\u0096\u0097\7t\2\2\u0097$\3\2\2\2\u0098")
        buf.write("\u0099\7=\2\2\u0099&\3\2\2\2\u009a\u009b\7k\2\2\u009b")
        buf.write("\u009c\7p\2\2\u009c(\3\2\2\2\u009d\u009e\7t\2\2\u009e")
        buf.write("\u009f\7c\2\2\u009f\u00a0\7p\2\2\u00a0\u00a1\7i\2\2\u00a1")
        buf.write("\u00a2\7g\2\2\u00a2*\3\2\2\2\u00a3\u00a4\7.\2\2\u00a4")
        buf.write(",\3\2\2\2\u00a5\u00a6\7r\2\2\u00a6\u00a7\7t\2\2\u00a7")
        buf.write("\u00a8\7k\2\2\u00a8\u00a9\7p\2\2\u00a9\u00aa\7v\2\2\u00aa")
        buf.write(".\3\2\2\2\u00ab\u00ac\7h\2\2\u00ac\u00ad\7p\2\2\u00ad")
        buf.write("\60\3\2\2\2\u00ae\u00af\7*\2\2\u00af\u00b0\7+\2\2\u00b0")
        buf.write("\62\3\2\2\2\u00b1\u00b2\7i\2\2\u00b2\u00b3\7k\2\2\u00b3")
        buf.write("\u00b4\7x\2\2\u00b4\u00b5\7g\2\2\u00b5\64\3\2\2\2\u00b6")
        buf.write("\u00be\7$\2\2\u00b7\u00bd\n\2\2\2\u00b8\u00bd\t\3\2\2")
        buf.write("\u00b9\u00ba\7^\2\2\u00ba\u00bd\13\2\2\2\u00bb\u00bd\n")
        buf.write("\4\2\2\u00bc\u00b7\3\2\2\2\u00bc\u00b8\3\2\2\2\u00bc\u00b9")
        buf.write("\3\2\2\2\u00bc\u00bb\3\2\2\2\u00bd\u00c0\3\2\2\2\u00be")
        buf.write("\u00bc\3\2\2\2\u00be\u00bf\3\2\2\2\u00bf\u00c1\3\2\2\2")
        buf.write("\u00c0\u00be\3\2\2\2\u00c1\u00c2\7$\2\2\u00c2\66\3\2\2")
        buf.write("\2\u00c3\u00c7\t\5\2\2\u00c4\u00c6\t\6\2\2\u00c5\u00c4")
        buf.write("\3\2\2\2\u00c6\u00c9\3\2\2\2\u00c7\u00c5\3\2\2\2\u00c7")
        buf.write("\u00c8\3\2\2\2\u00c8\u00cc\3\2\2\2\u00c9\u00c7\3\2\2\2")
        buf.write("\u00ca\u00cc\7\62\2\2\u00cb\u00c3\3\2\2\2\u00cb\u00ca")
        buf.write("\3\2\2\2\u00cc8\3\2\2\2\u00cd\u00ce\7v\2\2\u00ce\u00cf")
        buf.write("\7t\2\2\u00cf\u00d0\7w\2\2\u00d0\u00d7\7g\2\2\u00d1\u00d2")
        buf.write("\7h\2\2\u00d2\u00d3\7c\2\2\u00d3\u00d4\7n\2\2\u00d4\u00d5")
        buf.write("\7u\2\2\u00d5\u00d7\7g\2\2\u00d6\u00cd\3\2\2\2\u00d6\u00d1")
        buf.write("\3\2\2\2\u00d7:\3\2\2\2\u00d8\u00d9\7-\2\2\u00d9<\3\2")
        buf.write("\2\2\u00da\u00db\7/\2\2\u00db>\3\2\2\2\u00dc\u00dd\7,")
        buf.write("\2\2\u00dd@\3\2\2\2\u00de\u00df\7\61\2\2\u00dfB\3\2\2")
        buf.write("\2\u00e0\u00e1\7c\2\2\u00e1\u00e2\7p\2\2\u00e2\u00e3\7")
        buf.write("f\2\2\u00e3D\3\2\2\2\u00e4\u00e5\7q\2\2\u00e5\u00e6\7")
        buf.write("t\2\2\u00e6F\3\2\2\2\u00e7\u00e8\7p\2\2\u00e8\u00e9\7")
        buf.write("q\2\2\u00e9\u00ea\7v\2\2\u00eaH\3\2\2\2\u00eb\u00ec\7")
        buf.write("?\2\2\u00ec\u00ed\7?\2\2\u00edJ\3\2\2\2\u00ee\u00ef\7")
        buf.write("#\2\2\u00ef\u00f0\7?\2\2\u00f0L\3\2\2\2\u00f1\u00f2\7")
        buf.write("@\2\2\u00f2N\3\2\2\2\u00f3\u00f4\7@\2\2\u00f4\u00f5\7")
        buf.write("?\2\2\u00f5P\3\2\2\2\u00f6\u00f7\7>\2\2\u00f7R\3\2\2\2")
        buf.write("\u00f8\u00f9\7>\2\2\u00f9\u00fa\7?\2\2\u00faT\3\2\2\2")
        buf.write("\u00fb\u00fc\7<\2\2\u00fc\u00fd\7?\2\2\u00fdV\3\2\2\2")
        buf.write("\u00fe\u0102\t\7\2\2\u00ff\u0101\t\b\2\2\u0100\u00ff\3")
        buf.write("\2\2\2\u0101\u0104\3\2\2\2\u0102\u0100\3\2\2\2\u0102\u0103")
        buf.write("\3\2\2\2\u0103X\3\2\2\2\u0104\u0102\3\2\2\2\u0105\u0107")
        buf.write("\t\t\2\2\u0106\u0105\3\2\2\2\u0107\u0108\3\2\2\2\u0108")
        buf.write("\u0106\3\2\2\2\u0108\u0109\3\2\2\2\u0109\u010a\3\2\2\2")
        buf.write("\u010a\u010b\b-\2\2\u010bZ\3\2\2\2\u010c\u010d\7\61\2")
        buf.write("\2\u010d\u010e\7\61\2\2\u010e\u0112\3\2\2\2\u010f\u0111")
        buf.write("\n\3\2\2\u0110\u010f\3\2\2\2\u0111\u0114\3\2\2\2\u0112")
        buf.write("\u0110\3\2\2\2\u0112\u0113\3\2\2\2\u0113\u0121\3\2\2\2")
        buf.write("\u0114\u0112\3\2\2\2\u0115\u0116\7\61\2\2\u0116\u0117")
        buf.write("\7,\2\2\u0117\u011b\3\2\2\2\u0118\u011a\13\2\2\2\u0119")
        buf.write("\u0118\3\2\2\2\u011a\u011d\3\2\2\2\u011b\u011c\3\2\2\2")
        buf.write("\u011b\u0119\3\2\2\2\u011c\u011e\3\2\2\2\u011d\u011b\3")
        buf.write("\2\2\2\u011e\u011f\7,\2\2\u011f\u0121\7\61\2\2\u0120\u010c")
        buf.write("\3\2\2\2\u0120\u0115\3\2\2\2\u0121\u0122\3\2\2\2\u0122")
        buf.write("\u0123\b.\2\2\u0123\\\3\2\2\2\r\2\u00bc\u00be\u00c7\u00cb")
        buf.write("\u00d6\u0102\u0108\u0112\u011b\u0120\3\b\2\2")
        return buf.getvalue()


class KiwiLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    STRING = 26
    DIGIT = 27
    BOOL = 28
    ADD = 29
    SUB = 30
    MUL = 31
    DIV = 32
    AND = 33
    OR = 34
    NOT = 35
    EQ = 36
    NEQ = 37
    GT = 38
    GTE = 39
    LT = 40
    LTE = 41
    ASSIGN = 42
    ID = 43
    WS = 44
    Comment = 45

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'int'", "'bool'", "'str'", "'++'", "'--'", "'='", "'('", "')'", 
            "'if'", "'{'", "'}'", "'else if'", "'else'", "'?'", "':'", "'while'", 
            "'for'", "';'", "'in'", "'range'", "','", "'print'", "'fn'", 
            "'()'", "'give'", "'+'", "'-'", "'*'", "'/'", "'and'", "'or'", 
            "'not'", "'=='", "'!='", "'>'", "'>='", "'<'", "'<='", "':='" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "DIGIT", "BOOL", "ADD", "SUB", "MUL", "DIV", "AND", 
            "OR", "NOT", "EQ", "NEQ", "GT", "GTE", "LT", "LTE", "ASSIGN", 
            "ID", "WS", "Comment" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "STRING", 
                  "DIGIT", "BOOL", "ADD", "SUB", "MUL", "DIV", "AND", "OR", 
                  "NOT", "EQ", "NEQ", "GT", "GTE", "LT", "LTE", "ASSIGN", 
                  "ID", "WS", "Comment" ]

    grammarFileName = "Kiwi.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


