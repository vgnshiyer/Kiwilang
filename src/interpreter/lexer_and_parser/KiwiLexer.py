# Generated from Kiwi.g4 by ANTLR 4.9.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\60")
        buf.write("\u0129\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4")
        buf.write("\3\4\3\4\3\5\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3")
        buf.write("\t\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3")
        buf.write("\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\20\3\20")
        buf.write("\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\23")
        buf.write("\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\26")
        buf.write("\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\31")
        buf.write("\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33")
        buf.write("\3\33\3\33\7\33\u00bf\n\33\f\33\16\33\u00c2\13\33\3\33")
        buf.write("\3\33\3\34\3\34\7\34\u00c8\n\34\f\34\16\34\u00cb\13\34")
        buf.write("\3\34\5\34\u00ce\n\34\3\35\3\35\3\35\3\36\3\36\3\36\3")
        buf.write("\36\3\36\3\36\3\36\3\36\3\36\5\36\u00dc\n\36\3\37\3\37")
        buf.write("\3 \3 \3!\3!\3\"\3\"\3#\3#\3#\3#\3$\3$\3$\3%\3%\3%\3%")
        buf.write("\3&\3&\3&\3\'\3\'\3\'\3(\3(\3)\3)\3)\3*\3*\3+\3+\3+\3")
        buf.write(",\3,\3,\3-\3-\7-\u0106\n-\f-\16-\u0109\13-\3.\6.\u010c")
        buf.write("\n.\r.\16.\u010d\3.\3.\3/\3/\3/\3/\7/\u0116\n/\f/\16/")
        buf.write("\u0119\13/\3/\3/\3/\3/\7/\u011f\n/\f/\16/\u0122\13/\3")
        buf.write("/\3/\5/\u0126\n/\3/\3/\3\u0120\2\60\3\3\5\4\7\5\t\6\13")
        buf.write("\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37")
        buf.write("\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34")
        buf.write("\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60\3")
        buf.write("\2\n\3\2$$\4\2\f\f\17\17\4\2$$^^\3\2\63;\3\2\62;\5\2C")
        buf.write("\\aac|\6\2\62;C\\aac|\5\2\13\f\17\17\"\"\2\u0134\2\3\3")
        buf.write("\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2")
        buf.write("\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2")
        buf.write("\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2")
        buf.write("\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2")
        buf.write("\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3")
        buf.write("\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2")
        buf.write("\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3")
        buf.write("\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K")
        buf.write("\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2")
        buf.write("U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2")
        buf.write("\3_\3\2\2\2\5c\3\2\2\2\7h\3\2\2\2\tl\3\2\2\2\13o\3\2\2")
        buf.write("\2\rr\3\2\2\2\17t\3\2\2\2\21v\3\2\2\2\23x\3\2\2\2\25{")
        buf.write("\3\2\2\2\27}\3\2\2\2\31\177\3\2\2\2\33\u0087\3\2\2\2\35")
        buf.write("\u008c\3\2\2\2\37\u008e\3\2\2\2!\u0090\3\2\2\2#\u0096")
        buf.write("\3\2\2\2%\u009a\3\2\2\2\'\u009c\3\2\2\2)\u009f\3\2\2\2")
        buf.write("+\u00a5\3\2\2\2-\u00a7\3\2\2\2/\u00ad\3\2\2\2\61\u00b0")
        buf.write("\3\2\2\2\63\u00b3\3\2\2\2\65\u00b8\3\2\2\2\67\u00cd\3")
        buf.write("\2\2\29\u00cf\3\2\2\2;\u00db\3\2\2\2=\u00dd\3\2\2\2?\u00df")
        buf.write("\3\2\2\2A\u00e1\3\2\2\2C\u00e3\3\2\2\2E\u00e5\3\2\2\2")
        buf.write("G\u00e9\3\2\2\2I\u00ec\3\2\2\2K\u00f0\3\2\2\2M\u00f3\3")
        buf.write("\2\2\2O\u00f6\3\2\2\2Q\u00f8\3\2\2\2S\u00fb\3\2\2\2U\u00fd")
        buf.write("\3\2\2\2W\u0100\3\2\2\2Y\u0103\3\2\2\2[\u010b\3\2\2\2")
        buf.write("]\u0125\3\2\2\2_`\7k\2\2`a\7p\2\2ab\7v\2\2b\4\3\2\2\2")
        buf.write("cd\7d\2\2de\7q\2\2ef\7q\2\2fg\7n\2\2g\6\3\2\2\2hi\7u\2")
        buf.write("\2ij\7v\2\2jk\7t\2\2k\b\3\2\2\2lm\7-\2\2mn\7-\2\2n\n\3")
        buf.write("\2\2\2op\7/\2\2pq\7/\2\2q\f\3\2\2\2rs\7?\2\2s\16\3\2\2")
        buf.write("\2tu\7*\2\2u\20\3\2\2\2vw\7+\2\2w\22\3\2\2\2xy\7k\2\2")
        buf.write("yz\7h\2\2z\24\3\2\2\2{|\7}\2\2|\26\3\2\2\2}~\7\177\2\2")
        buf.write("~\30\3\2\2\2\177\u0080\7g\2\2\u0080\u0081\7n\2\2\u0081")
        buf.write("\u0082\7u\2\2\u0082\u0083\7g\2\2\u0083\u0084\7\"\2\2\u0084")
        buf.write("\u0085\7k\2\2\u0085\u0086\7h\2\2\u0086\32\3\2\2\2\u0087")
        buf.write("\u0088\7g\2\2\u0088\u0089\7n\2\2\u0089\u008a\7u\2\2\u008a")
        buf.write("\u008b\7g\2\2\u008b\34\3\2\2\2\u008c\u008d\7A\2\2\u008d")
        buf.write("\36\3\2\2\2\u008e\u008f\7<\2\2\u008f \3\2\2\2\u0090\u0091")
        buf.write("\7y\2\2\u0091\u0092\7j\2\2\u0092\u0093\7k\2\2\u0093\u0094")
        buf.write("\7n\2\2\u0094\u0095\7g\2\2\u0095\"\3\2\2\2\u0096\u0097")
        buf.write("\7h\2\2\u0097\u0098\7q\2\2\u0098\u0099\7t\2\2\u0099$\3")
        buf.write("\2\2\2\u009a\u009b\7=\2\2\u009b&\3\2\2\2\u009c\u009d\7")
        buf.write("k\2\2\u009d\u009e\7p\2\2\u009e(\3\2\2\2\u009f\u00a0\7")
        buf.write("t\2\2\u00a0\u00a1\7c\2\2\u00a1\u00a2\7p\2\2\u00a2\u00a3")
        buf.write("\7i\2\2\u00a3\u00a4\7g\2\2\u00a4*\3\2\2\2\u00a5\u00a6")
        buf.write("\7.\2\2\u00a6,\3\2\2\2\u00a7\u00a8\7r\2\2\u00a8\u00a9")
        buf.write("\7t\2\2\u00a9\u00aa\7k\2\2\u00aa\u00ab\7p\2\2\u00ab\u00ac")
        buf.write("\7v\2\2\u00ac.\3\2\2\2\u00ad\u00ae\7h\2\2\u00ae\u00af")
        buf.write("\7p\2\2\u00af\60\3\2\2\2\u00b0\u00b1\7*\2\2\u00b1\u00b2")
        buf.write("\7+\2\2\u00b2\62\3\2\2\2\u00b3\u00b4\7i\2\2\u00b4\u00b5")
        buf.write("\7k\2\2\u00b5\u00b6\7x\2\2\u00b6\u00b7\7g\2\2\u00b7\64")
        buf.write("\3\2\2\2\u00b8\u00c0\7$\2\2\u00b9\u00bf\n\2\2\2\u00ba")
        buf.write("\u00bf\t\3\2\2\u00bb\u00bc\7^\2\2\u00bc\u00bf\13\2\2\2")
        buf.write("\u00bd\u00bf\n\4\2\2\u00be\u00b9\3\2\2\2\u00be\u00ba\3")
        buf.write("\2\2\2\u00be\u00bb\3\2\2\2\u00be\u00bd\3\2\2\2\u00bf\u00c2")
        buf.write("\3\2\2\2\u00c0\u00be\3\2\2\2\u00c0\u00c1\3\2\2\2\u00c1")
        buf.write("\u00c3\3\2\2\2\u00c2\u00c0\3\2\2\2\u00c3\u00c4\7$\2\2")
        buf.write("\u00c4\66\3\2\2\2\u00c5\u00c9\t\5\2\2\u00c6\u00c8\t\6")
        buf.write("\2\2\u00c7\u00c6\3\2\2\2\u00c8\u00cb\3\2\2\2\u00c9\u00c7")
        buf.write("\3\2\2\2\u00c9\u00ca\3\2\2\2\u00ca\u00ce\3\2\2\2\u00cb")
        buf.write("\u00c9\3\2\2\2\u00cc\u00ce\7\62\2\2\u00cd\u00c5\3\2\2")
        buf.write("\2\u00cd\u00cc\3\2\2\2\u00ce8\3\2\2\2\u00cf\u00d0\7p\2")
        buf.write("\2\u00d0\u00d1\7n\2\2\u00d1:\3\2\2\2\u00d2\u00d3\7v\2")
        buf.write("\2\u00d3\u00d4\7t\2\2\u00d4\u00d5\7w\2\2\u00d5\u00dc\7")
        buf.write("g\2\2\u00d6\u00d7\7h\2\2\u00d7\u00d8\7c\2\2\u00d8\u00d9")
        buf.write("\7n\2\2\u00d9\u00da\7u\2\2\u00da\u00dc\7g\2\2\u00db\u00d2")
        buf.write("\3\2\2\2\u00db\u00d6\3\2\2\2\u00dc<\3\2\2\2\u00dd\u00de")
        buf.write("\7-\2\2\u00de>\3\2\2\2\u00df\u00e0\7/\2\2\u00e0@\3\2\2")
        buf.write("\2\u00e1\u00e2\7,\2\2\u00e2B\3\2\2\2\u00e3\u00e4\7\61")
        buf.write("\2\2\u00e4D\3\2\2\2\u00e5\u00e6\7c\2\2\u00e6\u00e7\7p")
        buf.write("\2\2\u00e7\u00e8\7f\2\2\u00e8F\3\2\2\2\u00e9\u00ea\7q")
        buf.write("\2\2\u00ea\u00eb\7t\2\2\u00ebH\3\2\2\2\u00ec\u00ed\7p")
        buf.write("\2\2\u00ed\u00ee\7q\2\2\u00ee\u00ef\7v\2\2\u00efJ\3\2")
        buf.write("\2\2\u00f0\u00f1\7?\2\2\u00f1\u00f2\7?\2\2\u00f2L\3\2")
        buf.write("\2\2\u00f3\u00f4\7#\2\2\u00f4\u00f5\7?\2\2\u00f5N\3\2")
        buf.write("\2\2\u00f6\u00f7\7@\2\2\u00f7P\3\2\2\2\u00f8\u00f9\7@")
        buf.write("\2\2\u00f9\u00fa\7?\2\2\u00faR\3\2\2\2\u00fb\u00fc\7>")
        buf.write("\2\2\u00fcT\3\2\2\2\u00fd\u00fe\7>\2\2\u00fe\u00ff\7?")
        buf.write("\2\2\u00ffV\3\2\2\2\u0100\u0101\7<\2\2\u0101\u0102\7?")
        buf.write("\2\2\u0102X\3\2\2\2\u0103\u0107\t\7\2\2\u0104\u0106\t")
        buf.write("\b\2\2\u0105\u0104\3\2\2\2\u0106\u0109\3\2\2\2\u0107\u0105")
        buf.write("\3\2\2\2\u0107\u0108\3\2\2\2\u0108Z\3\2\2\2\u0109\u0107")
        buf.write("\3\2\2\2\u010a\u010c\t\t\2\2\u010b\u010a\3\2\2\2\u010c")
        buf.write("\u010d\3\2\2\2\u010d\u010b\3\2\2\2\u010d\u010e\3\2\2\2")
        buf.write("\u010e\u010f\3\2\2\2\u010f\u0110\b.\2\2\u0110\\\3\2\2")
        buf.write("\2\u0111\u0112\7\61\2\2\u0112\u0113\7\61\2\2\u0113\u0117")
        buf.write("\3\2\2\2\u0114\u0116\n\3\2\2\u0115\u0114\3\2\2\2\u0116")
        buf.write("\u0119\3\2\2\2\u0117\u0115\3\2\2\2\u0117\u0118\3\2\2\2")
        buf.write("\u0118\u0126\3\2\2\2\u0119\u0117\3\2\2\2\u011a\u011b\7")
        buf.write("\61\2\2\u011b\u011c\7,\2\2\u011c\u0120\3\2\2\2\u011d\u011f")
        buf.write("\13\2\2\2\u011e\u011d\3\2\2\2\u011f\u0122\3\2\2\2\u0120")
        buf.write("\u0121\3\2\2\2\u0120\u011e\3\2\2\2\u0121\u0123\3\2\2\2")
        buf.write("\u0122\u0120\3\2\2\2\u0123\u0124\7,\2\2\u0124\u0126\7")
        buf.write("\61\2\2\u0125\u0111\3\2\2\2\u0125\u011a\3\2\2\2\u0126")
        buf.write("\u0127\3\2\2\2\u0127\u0128\b/\2\2\u0128^\3\2\2\2\r\2\u00be")
        buf.write("\u00c0\u00c9\u00cd\u00db\u0107\u010d\u0117\u0120\u0125")
        buf.write("\3\b\2\2")
        return buf.getvalue()


class KiwiLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    STRING = 26
    DIGIT = 27
    NL = 28
    BOOL = 29
    ADD = 30
    SUB = 31
    MUL = 32
    DIV = 33
    AND = 34
    OR = 35
    NOT = 36
    EQ = 37
    NEQ = 38
    GT = 39
    GTE = 40
    LT = 41
    LTE = 42
    ASSIGN = 43
    ID = 44
    WS = 45
    Comment = 46

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'int'", "'bool'", "'str'", "'++'", "'--'", "'='", "'('", "')'", 
            "'if'", "'{'", "'}'", "'else if'", "'else'", "'?'", "':'", "'while'", 
            "'for'", "';'", "'in'", "'range'", "','", "'print'", "'fn'", 
            "'()'", "'give'", "'nl'", "'+'", "'-'", "'*'", "'/'", "'and'", 
            "'or'", "'not'", "'=='", "'!='", "'>'", "'>='", "'<'", "'<='", 
            "':='" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "DIGIT", "NL", "BOOL", "ADD", "SUB", "MUL", "DIV", 
            "AND", "OR", "NOT", "EQ", "NEQ", "GT", "GTE", "LT", "LTE", "ASSIGN", 
            "ID", "WS", "Comment" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "STRING", 
                  "DIGIT", "NL", "BOOL", "ADD", "SUB", "MUL", "DIV", "AND", 
                  "OR", "NOT", "EQ", "NEQ", "GT", "GTE", "LT", "LTE", "ASSIGN", 
                  "ID", "WS", "Comment" ]

    grammarFileName = "Kiwi.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


